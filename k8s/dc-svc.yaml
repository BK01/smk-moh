apiVersion: v1
kind: Service
metadata:
  labels:
    app: smk-moh
    smk-client: moh
    smk-site: moh
  name: smk-moh
spec:
  ports:
  - name: http-proxy
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: smk-moh
---
apiVersion: v1
data:
  caddifile: |-
      0.0.0.0:8080 {
      git {$siteRepo} /app/smk {
       branch {$branch}
       hook {$webhook} {$webhookPass}
      }
      root /app/smk/sites
      gzip
      log stdout
      errors stdout
      }
kind: ConfigMap
metadata:
  name: moh-caddifile
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: smk-moh
  labels:
    app: smk-moh
spec:
  selector:
    matchLabels:
      app: smk-moh
  serviceName: smk-moh
  replicas: 1
  template:
    metadata:
      labels:
        app: smk-moh
      annotations:
    spec:
      containers:
      - name: www
        env:
        - name: branch
          value:
        - name: siteRepo
          value:
        - name: webhook
          value:
        - name: webhookPass
          valueFrom:
            secretKeyRef:
              name: caddypasswh
              key: caddypass.webhook
        image: docker-registry.default.svc:5000/dbc-mapsdk-test/smk-base:latest
        command: ["caddy", "-quic", "-conf"]
        args: ["/conf/Caddyfile"]
        volumeMounts:
        - mountPath: /conf
          name: caddy-conf
        - mountPath: /app/smk
          name: moh-site
      volumes:
      - name: caddy-conf
        configMap:
          name: moh-caddifile
          items:
          - key: caddifile
            path: Caddyfile
      - name: moh-site
        persistentVolumeClaim:
          claimName: moh-site
  triggers:
  - type: ConfigChange
