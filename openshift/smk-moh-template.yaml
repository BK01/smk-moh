apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: smk-moh-template
metadata:
  name: smk-moh-template

parameters:
  - name: "DEPLOY_NAMESPACE"
    description: "ocp namespace to be deployed"
    value: namespace
  - name: "APP_NAME"
    description: "name of app"
    value: smk-moh
  - name: "ENV"
    description: "environment"
    value: dev
  - name: "GIT_URL"
    description: "github repo rul"
    value: https://github.com/bcgov/smk-moh.git
  - name: "GIT_BRANCH"
    description: "github repo branch"
    value: qa
  - name: "TOOLS_NAMESPACE"
    description: "tools namespace where build will be"
    value: tools_namespace


objects:

  - kind: ConfigMap
    apiVersion: v1
    data:
      caddifile: |-
        0.0.0.0:8080 {
        root /app/smk/smk-moh/sites
        gzip
        log stdout
        errors stdout
        }
    
    metadata:
      labels:
        app: ${APP_NAME}-${ENV}
      name: moh-caddifile
  
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: ${APP_NAME}-${ENV}
      finalizers:
      - kubernetes.io/pvc-protection
      name: moh-site
    spec:
      accessModes:
      - ReadWriteMany
      resources:
        requests:
          storage: 1Gi
      storageClassName: netapp-file-standard

  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: ${APP_NAME}-${ENV}
      name: ${APP_NAME}-route
    spec:
      host: ${APP_NAME}-${ENV}.apps.silver.devops.gov.bc.ca
      port:
        targetPort: http-proxy
      tls:
        termination: edge
      to:
        kind: Service
        name: ${APP_NAME}-service
        weight: 100
      wildcardPolicy: None

  - apiVersion: v1 
    kind: Service
    metadata:
      labels:
        app: ${APP_NAME}-${ENV}
      name: ${APP_NAME}-service
    spec:
      ports:
      - name: http-proxy
        port: 8080
        protocol: TCP
        targetPort: 8080
      selector:
        app: ${APP_NAME}-${ENV}
      sessionAffinity: None
      type: ClusterIP

  - apiVersion: apps/v1 
    kind: Deployment
    metadata:
      labels:
        app: ${APP_NAME}-${ENV}
        smk-client: ${APP_NAME}
        smk-site: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      progressDeadlineSeconds: 600
      replicas: 2
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: ${APP_NAME}-${ENV}
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 1
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: ${APP_NAME}-${ENV}
        spec:
          containers:
          - command:
            - /go/caddy
            - -quic
            - -conf
            - /conf/Caddyfile
            env:
            - name: hookPath
              value: /webhook
            - name: hookKey
              valueFrom:
                secretKeyRef:
                  key: caddy.webhook
                  name: moh-webhook-key
            image: image-registry.openshift-image-registry.svc:5000/${TOOLS_NAMESPACE}/smk-base:latest 
            imagePullPolicy: Always
            name: www
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /go
              name: bin-volume
            - mountPath: /conf
              name: caddy-conf
            - mountPath: /app/smk
              name: moh-site
          dnsPolicy: ClusterFirst
          initContainers:
          - resources: {}
            terminationMessagePath: /dev/termination-log
            name: git-cloner
            command:
            - cp
            - '-r'
            - /app/smk-moh
            - /app/smk
            imagePullPolicy: Always
            volumeMounts:
              - name: moh-site
                mountPath: /app/smk
            image: >-
              image-registry.openshift-image-registry.svc:5000/${TOOLS_NAMESPACE}/${APP_NAME}-${ENV}:latest
          - command:
            - cp
            - /install/caddy
            - /dist
            image: image-registry.openshift-image-registry.svc:5000/${TOOLS_NAMESPACE}/iac-core:latest
            imagePullPolicy: Always
            name: installcaddy
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /dist
              name: bin-volume
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
          - emptyDir: {}
            name: bin-volume
          - configMap:
              defaultMode: 420
              items:
              - key: caddifile
                path: Caddyfile
              name: moh-caddifile
            name: caddy-conf
          - name: moh-site
            persistentVolumeClaim:
              claimName: moh-site
